name: BUILD and Deploy Stage1

on:
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest
    environment: stage
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        env: # Or as an environment variable
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
#        run: ./gradlew build -x test
        run: ./gradlew -P version=stage1_${{ github.ref_name }}_v${{ github.run_number }} -P environment=stage1 war

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "**/test-results/**/*.xml"

      - uses: actions/upload-artifact@v3
        with:
          name: il-client-${{ github.ref_name }}-${{ github.run_number }}.war
          path: sf-client/build/libs/il-client-*.war

      - uses: actions/upload-artifact@v3
        with:
          name: il-operator-${{ github.ref_name }}-${{ github.run_number }}.war
          path: sf-operator/build/libs/il-operator-*.war

  deploy-client:
    needs: build
    runs-on: ubuntu-latest
    environment: stage

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: AvenuApp/Introlend-Consumer-Deploy
          ref: main
          path: './deploy'
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - run: chmod a+x ./deploy/aws/scripts/*.sh
      - name: Download artifact il-client-${{ github.ref_name }}-${{ github.run_number }}.war
        uses: actions/download-artifact@v3
        with:
          name: il-client-${{ github.ref_name }}-${{ github.run_number }}.war
          path: ./deploy
      - name: Deploy Client
        uses: sourcetoad/aws-codedeploy-action@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: us-west-1
          codedeploy_name: IntroLendConsumer
          codedeploy_group: Deploy-stage1-Client
          codedeploy_register_only: false
          s3_bucket: dev-code-deploy01
          s3_folder: stage1/client
          excluded_files: '.git/* .env'
          max_polling_iterations: 60
          directory: ./deploy

  deploy-operator:
    needs: build
    runs-on: ubuntu-latest
    environment: stage

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: AvenuApp/Introlend-Consumer-Deploy
          ref: main
          path: './deploy'
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - run: chmod a+x ./deploy/aws/scripts/*.sh
      - name: Download artifact il-operator-${{ github.ref_name }}-${{ github.run_number }}.war
        uses: actions/download-artifact@v3
        with:
          name: il-operator-${{ github.ref_name }}-${{ github.run_number }}.war
          path: ./deploy
      - name: Deploy Operator
        uses: sourcetoad/aws-codedeploy-action@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: us-west-1
          codedeploy_name: IntroLendConsumer
          codedeploy_group: Deploy-stage1-Operator
          codedeploy_register_only: false
          s3_bucket: dev-code-deploy01
          s3_folder: stage1/operator
          excluded_files: '.git/* .env'
          max_polling_iterations: 60
          directory: ./deploy

  send-message:
    needs:
      - deploy-client
      - deploy-operator
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Send done message to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "environment": "stage1",
              "branch": "${{ github.ref_name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
